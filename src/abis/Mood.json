{
  "contractName": "Mood",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "moods",
      "outputs": [
        {
          "internalType": "enum Mood.MoodStates",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "moodsStr",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMood",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "setHappyMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "setAnxiousMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "setSadMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "setPurposefulMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "setLonelyMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "setPainfullyMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        }
      ],
      "name": "setUniqueMood",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getMood\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"moods\",\"outputs\":[{\"internalType\":\"enum Mood.MoodStates\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"moodsStr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setAnxiousMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setHappyMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setLonelyMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setPainfullyMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setPurposefulMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSadMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"setUniqueMood\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Mood.sol\":\"Mood\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Mood.sol\":{\"keccak256\":\"0x59dea73f69bdeb73260218d069fe39c42641ebab7d01fa6fbba97563c81c4406\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d2b1329fca53c5ae4b6f07e9ca88c261b0e5188cf55fe74cc561f7c86cea03c\",\"dweb:/ipfs/QmcEPKLjZTcUn6WrFq9JcYfyXUorJroukvHkvm8BCPaJw8\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c80638b17c341116100645780638b17c341146101255780638da5cb5b146101625780639d0c13971461018d578063d509e0e6146101b8578063dce5004b146101c2578063fe5214ed146101cc5761009c565b806306219126146100a15780631da7f064146100ca57806369d2b352146100d45780636fb815f814610111578063768dd0841461011b575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c3919061109d565b6101d6565b005b6100d26102ca565b005b3480156100e057600080fd5b506100fb60048036038101906100f6919061109d565b610406565b6040516101089190611141565b60405180910390f35b610119610426565b005b610123610562565b005b34801561013157600080fd5b5061014c6004803603810190610147919061109d565b61069e565b60405161015991906111f5565b60405180910390f35b34801561016e57600080fd5b5061017761073e565b6040516101849190611226565b60405180910390f35b34801561019957600080fd5b506101a2610762565b6040516101af91906111f5565b60405180910390f35b6101c0610be4565b005b6101ca610d20565b005b6101d4610e5b565b005b6007600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836007811115610239576102386110ca565b5b02179055506040518060400160405280600581526020017f4d6f6f6479000000000000000000000000000000000000000000000000000000815250600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906102c6929190610f97565b5050565b66470de4df8200003414610313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030a906112b3565b60405180910390fd5b6002600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836007811115610376576103756110ca565b5b02179055506040518060400160405280600381526020017f5361640000000000000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610403929190610f97565b50565b60016020528060005260406000206000915054906101000a900460ff1681565b66470de4df820000341461046f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610466906112b3565b60405180910390fd5b6004600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360078111156104d2576104d16110ca565b5b02179055506040518060400160405280600681526020017f4c6f6e656c790000000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061055f929190610f97565b50565b66470de4df82000034146105ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a2906112b3565b60405180910390fd5b6003600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600781111561060e5761060d6110ca565b5b02179055506040518060400160405280600a81526020017f507572706f736566756c00000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061069b929190610f97565b50565b600260205280600052604060002060009150905080546106bd90611302565b80601f01602080910402602001604051908101604052809291908181526020018280546106e990611302565b80156107365780601f1061070b57610100808354040283529160200191610736565b820191906000526020600020905b81548152906001019060200180831161071957829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006007811115610778576107776110ca565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660078111156107d7576107d66110ca565b5b141561081a576040518060400160405280600581526020017f48617070790000000000000000000000000000000000000000000000000000008152509050610be1565b6001600781111561082e5761082d6110ca565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600781111561088d5761088c6110ca565b5b14156108d0576040518060400160405280600781526020017f416e78696f7573000000000000000000000000000000000000000000000000008152509050610be1565b600260078111156108e4576108e36110ca565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166007811115610943576109426110ca565b5b1415610986576040518060400160405280600381526020017f53616400000000000000000000000000000000000000000000000000000000008152509050610be1565b6003600781111561099a576109996110ca565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660078111156109f9576109f86110ca565b5b1415610a3c576040518060400160405280600a81526020017f507572706f736566756c000000000000000000000000000000000000000000008152509050610be1565b60046007811115610a5057610a4f6110ca565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166007811115610aaf57610aae6110ca565b5b1415610af2576040518060400160405280600681526020017f4c6f6e656c7900000000000000000000000000000000000000000000000000008152509050610be1565b60056007811115610b0657610b056110ca565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166007811115610b6557610b646110ca565b5b1415610ba8576040518060400160405280600981526020017f5061696e66756c6c7900000000000000000000000000000000000000000000008152509050610be1565b6040518060400160405280600681526020017f4e6f4d6f6f64000000000000000000000000000000000000000000000000000081525090505b90565b66470de4df8200003414610c2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c24906112b3565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836007811115610c9057610c8f6110ca565b5b02179055506040518060400160405280600581526020017f4861707079000000000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610d1d929190610f97565b50565b66470de4df8200003414610d69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d60906112b3565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836007811115610dcb57610dca6110ca565b5b02179055506040518060400160405280600781526020017f416e78696f757300000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610e58929190610f97565b50565b66470de4df8200003414610ea4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9b906112b3565b60405180910390fd5b6005600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836007811115610f0757610f066110ca565b5b02179055506040518060400160405280600981526020017f5061696e66756c6c790000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610f94929190610f97565b50565b828054610fa390611302565b90600052602060002090601f016020900481019282610fc5576000855561100c565b82601f10610fde57805160ff191683800117855561100c565b8280016001018555821561100c579182015b8281111561100b578251825591602001919060010190610ff0565b5b509050611019919061101d565b5090565b5b8082111561103657600081600090555060010161101e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061106a8261103f565b9050919050565b61107a8161105f565b811461108557600080fd5b50565b60008135905061109781611071565b92915050565b6000602082840312156110b3576110b261103a565b5b60006110c184828501611088565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6008811061110a576111096110ca565b5b50565b600081905061111b826110f9565b919050565b600061112b8261110d565b9050919050565b61113b81611120565b82525050565b60006020820190506111566000830184611132565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561119657808201518184015260208101905061117b565b838111156111a5576000848401525b50505050565b6000601f19601f8301169050919050565b60006111c78261115c565b6111d18185611167565b93506111e1818560208601611178565b6111ea816111ab565b840191505092915050565b6000602082019050818103600083015261120f81846111bc565b905092915050565b6112208161105f565b82525050565b600060208201905061123b6000830184611217565b92915050565b7f596f75206e65656420746f2073656e6420302e30322065746820746f2073657460008201527f20596f7572204d6f6f6420616e64204765742073757270726973650000000000602082015250565b600061129d603b83611167565b91506112a882611241565b604082019050919050565b600060208201905081810360008301526112cc81611290565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061131a57607f821691505b6020821081141561132e5761132d6112d3565b5b5091905056fea2646970667358221220c5cb27039e803151d72459af12fa2f23b5eb2af39c2cec85a68eded38944c46964736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5481:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:3",
                "type": ""
              }
            ],
            "src": "7:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:3",
                "type": ""
              }
            ],
            "src": "334:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:3",
                "type": ""
              }
            ],
            "src": "466:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:3",
                "type": ""
              }
            ],
            "src": "568:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:3",
                "type": ""
              }
            ],
            "src": "696:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:3",
                "type": ""
              }
            ],
            "src": "841:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1204:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1221:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1224:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1214:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1214:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1318:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1321:4:3",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1311:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1311:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1311:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1342:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1345:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1335:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1335:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1335:15:3"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1176:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1418:62:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1452:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "1454:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1454:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1454:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1441:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1448:1:3",
                            "type": "",
                            "value": "8"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1438:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1438:12:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1431:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1431:20:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1428:46:3"
                }
              ]
            },
            "name": "validator_assert_t_enum$_MoodStates_$12",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1411:5:3",
                "type": ""
              }
            ],
            "src": "1362:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1544:79:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1554:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1565:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1554:7:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1611:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_MoodStates_$12",
                      "nodeType": "YulIdentifier",
                      "src": "1571:39:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1571:46:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1571:46:3"
                }
              ]
            },
            "name": "cleanup_t_enum$_MoodStates_$12",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1526:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1536:7:3",
                "type": ""
              }
            ],
            "src": "1486:137:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1700:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1710:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1754:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_MoodStates_$12",
                      "nodeType": "YulIdentifier",
                      "src": "1723:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1723:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1710:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_MoodStates_$12_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1680:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1690:9:3",
                "type": ""
              }
            ],
            "src": "1629:137:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1848:77:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1865:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1912:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_MoodStates_$12_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1870:41:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1870:48:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1858:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1858:61:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1858:61:3"
                }
              ]
            },
            "name": "abi_encode_t_enum$_MoodStates_$12_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1836:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1843:3:3",
                "type": ""
              }
            ],
            "src": "1772:153:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2040:135:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2050:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2062:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2073:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2058:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2058:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2050:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2141:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2154:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2165:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2150:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2150:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_MoodStates_$12_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2086:54:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2086:82:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2086:82:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_MoodStates_$12__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2012:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2024:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2035:4:3",
                "type": ""
              }
            ],
            "src": "1931:244:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2240:40:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2251:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2267:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2261:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2261:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2251:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2223:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2233:6:3",
                "type": ""
              }
            ],
            "src": "2181:99:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2382:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2399:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2404:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2392:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2392:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2392:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2420:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2439:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2444:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2435:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2435:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2420:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2354:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2359:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2370:11:3",
                "type": ""
              }
            ],
            "src": "2286:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2510:258:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2520:10:3",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2529:1:3",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2524:1:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2589:63:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2614:3:3"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2619:1:3"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2610:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2610:11:3"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2633:3:3"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2638:1:3"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2629:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2629:11:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2623:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2623:18:3"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2603:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2603:39:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2603:39:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2550:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2553:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2547:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2547:13:3"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2561:19:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2563:15:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2572:1:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2575:2:3",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2568:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2568:10:3"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2563:1:3"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2543:3:3",
                    "statements": []
                  },
                  "src": "2539:113:3"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2686:76:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2736:3:3"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2741:6:3"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2732:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2732:16:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2750:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2725:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2725:27:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2725:27:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2667:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2670:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2664:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2664:13:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2661:101:3"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2492:3:3",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2497:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2502:6:3",
                "type": ""
              }
            ],
            "src": "2461:307:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2822:54:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2832:38:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2850:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2857:2:3",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2846:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2846:14:3"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2866:2:3",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2862:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2862:7:3"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2842:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2842:28:3"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "2832:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2805:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "2815:6:3",
                "type": ""
              }
            ],
            "src": "2774:102:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2974:272:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2984:53:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3031:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2998:32:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2998:39:3"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2988:6:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3046:78:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3112:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3117:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3053:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3053:71:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3046:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3159:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3166:4:3",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3155:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3155:16:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3173:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3178:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3133:21:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3133:52:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3133:52:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3194:46:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3205:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3232:6:3"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3210:21:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3210:29:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3201:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3201:39:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3194:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2955:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2962:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2970:3:3",
                "type": ""
              }
            ],
            "src": "2882:364:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3370:195:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3380:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3392:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3403:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3388:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3388:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3380:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3427:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3438:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3423:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3423:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3446:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3452:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3442:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3442:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3416:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3416:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3416:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3472:86:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3544:6:3"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3553:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3480:63:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3480:78:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3472:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3342:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3354:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3365:4:3",
                "type": ""
              }
            ],
            "src": "3252:313:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3636:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3653:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3676:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3658:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3658:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3646:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3646:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3646:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3624:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3631:3:3",
                "type": ""
              }
            ],
            "src": "3571:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3793:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3803:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3815:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3826:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3811:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3811:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3803:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3883:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3896:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3907:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3892:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3892:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3839:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3839:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3839:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3765:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3777:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3788:4:3",
                "type": ""
              }
            ],
            "src": "3695:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4029:140:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4051:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4059:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4047:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4047:14:3"
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656e6420302e30322065746820746f20736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4063:34:3",
                        "type": "",
                        "value": "You need to send 0.02 eth to set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4040:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4040:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4040:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4119:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4127:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4115:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4115:15:3"
                      },
                      {
                        "hexValue": "20596f7572204d6f6f6420616e6420476574207375727072697365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4132:29:3",
                        "type": "",
                        "value": " Your Mood and Get surprise"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4108:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4108:54:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4108:54:3"
                }
              ]
            },
            "name": "store_literal_in_memory_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4021:6:3",
                "type": ""
              }
            ],
            "src": "3923:246:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4321:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4331:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4397:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4402:2:3",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4338:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4338:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4331:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4503:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48",
                      "nodeType": "YulIdentifier",
                      "src": "4414:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4414:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4414:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4516:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4527:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4532:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4523:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4523:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4516:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4309:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4317:3:3",
                "type": ""
              }
            ],
            "src": "4175:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4718:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4728:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4740:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4751:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4736:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4736:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4728:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4775:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4786:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4771:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4771:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4794:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4800:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4790:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4790:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4764:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4764:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4764:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4820:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4954:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4828:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4828:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4820:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4698:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4713:4:3",
                "type": ""
              }
            ],
            "src": "4547:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5000:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5017:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5020:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5010:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5010:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5010:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5114:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5117:4:3",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5107:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5107:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5107:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5138:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5141:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5131:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5131:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5131:15:3"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "4972:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5209:269:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5219:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5233:4:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5239:1:3",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "5229:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5229:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5219:6:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5250:38:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5280:4:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5286:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5276:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5276:12:3"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5254:18:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5327:51:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5341:27:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5355:6:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5363:4:3",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5351:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5351:17:3"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5341:6:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5307:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5300:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5300:26:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5297:81:3"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5430:42:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "5444:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5444:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5444:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5394:18:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5417:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5425:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5414:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5414:14:3"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5391:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5391:38:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5388:84:3"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5193:4:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5202:6:3",
                "type": ""
              }
            ],
            "src": "5158:320:3"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_MoodStates_$12(value) {\n        if iszero(lt(value, 8)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_MoodStates_$12(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_MoodStates_$12(value)\n    }\n\n    function convert_t_enum$_MoodStates_$12_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_MoodStates_$12(value)\n    }\n\n    function abi_encode_t_enum$_MoodStates_$12_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_MoodStates_$12_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_MoodStates_$12__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_MoodStates_$12_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48(memPtr) {\n\n        mstore(add(memPtr, 0), \"You need to send 0.02 eth to set\")\n\n        mstore(add(memPtr, 32), \" Your Mood and Get surprise\")\n\n    }\n\n    function abi_encode_t_stringliteral_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 59)\n        store_literal_in_memory_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "65:2256:0:-:0;;;330:48;;;;;;;;;;361:10;353:5;;:18;;;;;;;;;;;;;;;;;;65:2256;;;;;;",
  "deployedSourceMap": "65:2256:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:125;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1405:141;;;:::i;:::-;;212:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1720:153;;;:::i;:::-;;1552:162;;;:::i;:::-;;262:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;96:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:703;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1094:146;;;:::i;:::-;;1246:153;;;:::i;:::-;;1879:158;;;:::i;:::-;;2042:125;2110:16;2096:5;:11;2102:4;2096:11;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2136:24;;;;;;;;;;;;;;;;;:8;:14;2145:4;2136:14;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;2042:125;:::o;1405:141::-;2227:10;2214:9;:23;2206:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1486:14:::1;1466:5;:17;1472:10;1466:17;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1510:28;;;;;;;;;;;;;;;;::::0;:8:::1;:20;1519:10;1510:20;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:::i;:::-;;1405:141::o:0;212:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;1720:153::-;2227:10;2214:9;:23;2206:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1804:17:::1;1784:5;:17;1790:10;1784:17;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1834:31;;;;;;;;;;;;;;;;::::0;:8:::1;:20;1843:10;1834:20;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1720:153::o:0;1552:162::-;2227:10;2214:9;:23;2206:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1640:21:::1;1620:5;:17;1626:10;1620:17;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1671:35;;;;;;;;;;;;;;;;::::0;:8:::1;:20;1680:10;1671:20;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:::i;:::-;;1552:162::o:0;262:43::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;96:20::-;;;;;;;;;;;;:::o;384:703::-;423:13;471:16;450:37;;;;;;;;:::i;:::-;;:5;:17;456:10;450:17;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;447:634;;;502:14;;;;;;;;;;;;;;;;;;;;;447:634;566:18;545:39;;;;;;;;:::i;:::-;;:5;:17;551:10;545:17;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;;;;;;:::i;:::-;;;541:540;;;600:16;;;;;;;;;;;;;;;;;;;;;541:540;666:14;645:35;;;;;;;;:::i;:::-;;:5;:17;651:10;645:17;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;:::i;:::-;;;641:440;;;696:12;;;;;;;;;;;;;;;;;;;;;641:440;758:21;737:42;;;;;;;;:::i;:::-;;:5;:17;743:10;737:17;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;;;;;:::i;:::-;;;733:348;;;795:19;;;;;;;;;;;;;;;;;;;;;733:348;864:17;843:38;;;;;;;;:::i;:::-;;:5;:17;849:10;843:17;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;;;;;;:::i;:::-;;;839:242;;;897:15;;;;;;;;;;;;;;;;;;;;;839:242;962:20;941:41;;;;;;;;:::i;:::-;;:5;:17;947:10;941:17;;;;;;;;;;;;;;;;;;;;;;;;;:41;;;;;;;;:::i;:::-;;;937:144;;;998:18;;;;;;;;;;;;;;;;;;;;;937:144;1055:15;;;;;;;;;;;;;;;;;;;384:703;;:::o;1094:146::-;2227:10;2214:9;:23;2206:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1177:16:::1;1157:5;:17;1163:10;1157:17;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1203:30;;;;;;;;;;;;;;;;::::0;:8:::1;:20;1212:10;1203:20;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:::i;:::-;;1094:146::o:0;1246:153::-;2227:10;2214:9;:23;2206:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1331:18:::1;1311:5:::0;:17:::1;1317:10;1311:17;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1359:32;;;;;;;;;;;;;;;;::::0;:8:::1;:20;1368:10;1359:20;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:::i;:::-;;1246:153::o:0;1879:158::-;2227:10;2214:9;:23;2206:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1966:20:::1;1946:5;:17;1952:10;1946:17;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1996:34;;;;;;;;;;;;;;;;::::0;:8:::1;:20;2005:10;1996:20;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:::i;:::-;;1879:158::o:0;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:180::-;1224:77;1221:1;1214:88;1321:4;1318:1;1311:15;1345:4;1342:1;1335:15;1362:118;1448:1;1441:5;1438:12;1428:46;;1454:18;;:::i;:::-;1428:46;1362:118;:::o;1486:137::-;1536:7;1565:5;1554:16;;1571:46;1611:5;1571:46;:::i;:::-;1486:137;;;:::o;1629:::-;1690:9;1723:37;1754:5;1723:37;:::i;:::-;1710:50;;1629:137;;;:::o;1772:153::-;1870:48;1912:5;1870:48;:::i;:::-;1865:3;1858:61;1772:153;;:::o;1931:244::-;2035:4;2073:2;2062:9;2058:18;2050:26;;2086:82;2165:1;2154:9;2150:17;2141:6;2086:82;:::i;:::-;1931:244;;;;:::o;2181:99::-;2233:6;2267:5;2261:12;2251:22;;2181:99;;;:::o;2286:169::-;2370:11;2404:6;2399:3;2392:19;2444:4;2439:3;2435:14;2420:29;;2286:169;;;;:::o;2461:307::-;2529:1;2539:113;2553:6;2550:1;2547:13;2539:113;;;2638:1;2633:3;2629:11;2623:18;2619:1;2614:3;2610:11;2603:39;2575:2;2572:1;2568:10;2563:15;;2539:113;;;2670:6;2667:1;2664:13;2661:101;;;2750:1;2741:6;2736:3;2732:16;2725:27;2661:101;2510:258;2461:307;;;:::o;2774:102::-;2815:6;2866:2;2862:7;2857:2;2850:5;2846:14;2842:28;2832:38;;2774:102;;;:::o;2882:364::-;2970:3;2998:39;3031:5;2998:39;:::i;:::-;3053:71;3117:6;3112:3;3053:71;:::i;:::-;3046:78;;3133:52;3178:6;3173:3;3166:4;3159:5;3155:16;3133:52;:::i;:::-;3210:29;3232:6;3210:29;:::i;:::-;3205:3;3201:39;3194:46;;2974:272;2882:364;;;;:::o;3252:313::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3452:9;3446:4;3442:20;3438:1;3427:9;3423:17;3416:47;3480:78;3553:4;3544:6;3480:78;:::i;:::-;3472:86;;3252:313;;;;:::o;3571:118::-;3658:24;3676:5;3658:24;:::i;:::-;3653:3;3646:37;3571:118;;:::o;3695:222::-;3788:4;3826:2;3815:9;3811:18;3803:26;;3839:71;3907:1;3896:9;3892:17;3883:6;3839:71;:::i;:::-;3695:222;;;;:::o;3923:246::-;4063:34;4059:1;4051:6;4047:14;4040:58;4132:29;4127:2;4119:6;4115:15;4108:54;3923:246;:::o;4175:366::-;4317:3;4338:67;4402:2;4397:3;4338:67;:::i;:::-;4331:74;;4414:93;4503:3;4414:93;:::i;:::-;4532:2;4527:3;4523:12;4516:19;;4175:366;;;:::o;4547:419::-;4713:4;4751:2;4740:9;4736:18;4728:26;;4800:9;4794:4;4790:20;4786:1;4775:9;4771:17;4764:47;4828:131;4954:4;4828:131;:::i;:::-;4820:139;;4547:419;;;:::o;4972:180::-;5020:77;5017:1;5010:88;5117:4;5114:1;5107:15;5141:4;5138:1;5131:15;5158:320;5202:6;5239:1;5233:4;5229:12;5219:22;;5286:1;5280:4;5276:12;5307:18;5297:81;;5363:4;5355:6;5351:17;5341:27;;5297:81;5425:2;5417:6;5414:14;5394:18;5391:38;5388:84;;;5444:18;;:::i;:::-;5388:84;5209:269;5158:320;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.10;\n\n\ncontract Mood {\n    //vars\n    address public owner;\n    enum MoodStates { Happy, Anxious, Sad, Purposeful, Lonely, Painfully, NoMood, Moody }\n    mapping (address => MoodStates) public moods;\n    mapping (address => string) public moodsStr;\n\n    //constructor\n    constructor(){\n        owner = msg.sender;\n    }\n\n    function getMood() public view returns(string memory){\n        if(moods[msg.sender] == MoodStates.Happy){\n            return \"Happy\";\n        }\n        else if (moods[msg.sender] == MoodStates.Anxious) {\n            return \"Anxious\";\n        }\n        else if (moods[msg.sender] == MoodStates.Sad) {\n            return \"Sad\";\n        }\n        else if (moods[msg.sender] == MoodStates.Purposeful) {\n            return \"Purposeful\";\n        }\n        else if (moods[msg.sender] == MoodStates.Lonely) {\n            return \"Lonely\";\n        }\n        else if (moods[msg.sender] == MoodStates.Painfully) {\n            return \"Painfully\";\n        }\n        else {\n            return \"NoMood\";\n        }\n    }\n\n\n    function setHappyMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Happy;\n        moodsStr[msg.sender] = \"Happy\";\n    }\n\n    function setAnxiousMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Anxious;\n        moodsStr[msg.sender] = \"Anxious\";\n\n    }\n\n    function setSadMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Sad;\n        moodsStr[msg.sender] = \"Sad\";\n\n    }\n\n    function setPurposefulMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Purposeful;\n        moodsStr[msg.sender] = \"Purposeful\";\n\n    }\n\n    function setLonelyMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Lonely;   \n        moodsStr[msg.sender] = \"Lonely\";\n\n    }\n\n    function setPainfullyMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Painfully;\n        moodsStr[msg.sender] = \"Painfully\";\n    }\n    function setUniqueMood(address _who) public {\n        moods[_who] = MoodStates.Moody;\n        moodsStr[_who] = \"Moody\";\n    }\n\n    modifier YouCantAfford {\n        require(msg.value == 0.02 ether, \"You need to send 0.02 eth to set Your Mood and Get surprise\");\n        _;\n    }\n}",
  "sourcePath": "/Volumes/LaCie/Mood Website/mood-app/contracts/Mood.sol",
  "ast": {
    "absolutePath": "project:/contracts/Mood.sol",
    "exportedSymbols": {
      "Mood": [
        263
      ]
    },
    "id": 264,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Mood",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 263,
        "linearizedBaseContracts": [
          263
        ],
        "name": "Mood",
        "nameLocation": "74:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "111:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "96:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "96:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Mood.MoodStates",
            "id": 12,
            "members": [
              {
                "id": 4,
                "name": "Happy",
                "nameLocation": "140:5:0",
                "nodeType": "EnumValue",
                "src": "140:5:0"
              },
              {
                "id": 5,
                "name": "Anxious",
                "nameLocation": "147:7:0",
                "nodeType": "EnumValue",
                "src": "147:7:0"
              },
              {
                "id": 6,
                "name": "Sad",
                "nameLocation": "156:3:0",
                "nodeType": "EnumValue",
                "src": "156:3:0"
              },
              {
                "id": 7,
                "name": "Purposeful",
                "nameLocation": "161:10:0",
                "nodeType": "EnumValue",
                "src": "161:10:0"
              },
              {
                "id": 8,
                "name": "Lonely",
                "nameLocation": "173:6:0",
                "nodeType": "EnumValue",
                "src": "173:6:0"
              },
              {
                "id": 9,
                "name": "Painfully",
                "nameLocation": "181:9:0",
                "nodeType": "EnumValue",
                "src": "181:9:0"
              },
              {
                "id": 10,
                "name": "NoMood",
                "nameLocation": "192:6:0",
                "nodeType": "EnumValue",
                "src": "192:6:0"
              },
              {
                "id": 11,
                "name": "Moody",
                "nameLocation": "200:5:0",
                "nodeType": "EnumValue",
                "src": "200:5:0"
              }
            ],
            "name": "MoodStates",
            "nameLocation": "127:10:0",
            "nodeType": "EnumDefinition",
            "src": "122:85:0"
          },
          {
            "constant": false,
            "functionSelector": "69d2b352",
            "id": 17,
            "mutability": "mutable",
            "name": "moods",
            "nameLocation": "251:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "212:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
              "typeString": "mapping(address => enum Mood.MoodStates)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "221:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "212:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                "typeString": "mapping(address => enum Mood.MoodStates)"
              },
              "valueType": {
                "id": 15,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14,
                  "name": "MoodStates",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "232:10:0"
                },
                "referencedDeclaration": 12,
                "src": "232:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_MoodStates_$12",
                  "typeString": "enum Mood.MoodStates"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8b17c341",
            "id": 21,
            "mutability": "mutable",
            "name": "moodsStr",
            "nameLocation": "297:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "262:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "271:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "262:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 19,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "282:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "343:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "353:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 25,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "361:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "361:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "353:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "353:18:0"
                }
              ]
            },
            "id": 30,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:2:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:0:0"
            },
            "scope": 263,
            "src": "330:48:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "437:650:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_MoodStates_$12",
                      "typeString": "enum Mood.MoodStates"
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 35,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "450:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 38,
                      "indexExpression": {
                        "expression": {
                          "id": 36,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "456:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "456:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "450:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 39,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "471:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Happy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "471:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "450:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 45,
                          "name": "moods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "545:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                            "typeString": "mapping(address => enum Mood.MoodStates)"
                          }
                        },
                        "id": 48,
                        "indexExpression": {
                          "expression": {
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "551:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "551:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "545:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MoodStates_$12",
                          "typeString": "enum Mood.MoodStates"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 49,
                          "name": "MoodStates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "566:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                            "typeString": "type(enum Mood.MoodStates)"
                          }
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Anxious",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "566:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MoodStates_$12",
                          "typeString": "enum Mood.MoodStates"
                        }
                      },
                      "src": "545:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_MoodStates_$12",
                          "typeString": "enum Mood.MoodStates"
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 55,
                            "name": "moods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "645:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                              "typeString": "mapping(address => enum Mood.MoodStates)"
                            }
                          },
                          "id": 58,
                          "indexExpression": {
                            "expression": {
                              "id": 56,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "651:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "651:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "645:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MoodStates_$12",
                            "typeString": "enum Mood.MoodStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 59,
                            "name": "MoodStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "666:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                              "typeString": "type(enum Mood.MoodStates)"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Sad",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "666:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MoodStates_$12",
                            "typeString": "enum Mood.MoodStates"
                          }
                        },
                        "src": "645:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_MoodStates_$12",
                            "typeString": "enum Mood.MoodStates"
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 65,
                              "name": "moods",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "737:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                                "typeString": "mapping(address => enum Mood.MoodStates)"
                              }
                            },
                            "id": 68,
                            "indexExpression": {
                              "expression": {
                                "id": 66,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "743:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 67,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "743:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "737:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MoodStates_$12",
                              "typeString": "enum Mood.MoodStates"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 69,
                              "name": "MoodStates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "758:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                                "typeString": "type(enum Mood.MoodStates)"
                              }
                            },
                            "id": 70,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Purposeful",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "758:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MoodStates_$12",
                              "typeString": "enum Mood.MoodStates"
                            }
                          },
                          "src": "737:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_MoodStates_$12",
                              "typeString": "enum Mood.MoodStates"
                            },
                            "id": 81,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 75,
                                "name": "moods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "843:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                                  "typeString": "mapping(address => enum Mood.MoodStates)"
                                }
                              },
                              "id": 78,
                              "indexExpression": {
                                "expression": {
                                  "id": 76,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "849:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 77,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "849:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "843:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MoodStates_$12",
                                "typeString": "enum Mood.MoodStates"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 79,
                                "name": "MoodStates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "864:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                                  "typeString": "type(enum Mood.MoodStates)"
                                }
                              },
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Lonely",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8,
                              "src": "864:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MoodStates_$12",
                                "typeString": "enum Mood.MoodStates"
                              }
                            },
                            "src": "843:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MoodStates_$12",
                                "typeString": "enum Mood.MoodStates"
                              },
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 85,
                                  "name": "moods",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17,
                                  "src": "941:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                                    "typeString": "mapping(address => enum Mood.MoodStates)"
                                  }
                                },
                                "id": 88,
                                "indexExpression": {
                                  "expression": {
                                    "id": 86,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "947:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 87,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "947:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "941:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MoodStates_$12",
                                  "typeString": "enum Mood.MoodStates"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 89,
                                  "name": "MoodStates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12,
                                  "src": "962:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                                    "typeString": "type(enum Mood.MoodStates)"
                                  }
                                },
                                "id": 90,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Painfully",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9,
                                "src": "962:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MoodStates_$12",
                                  "typeString": "enum Mood.MoodStates"
                                }
                              },
                              "src": "941:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 97,
                              "nodeType": "Block",
                              "src": "1041:40:0",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "4e6f4d6f6f64",
                                    "id": 95,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1062:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_86bcfc5d44771442d11341bbc2f9c13e996e488d24b10f333b3dd5d05ac29aa8",
                                      "typeString": "literal_string \"NoMood\""
                                    },
                                    "value": "NoMood"
                                  },
                                  "functionReturnParameters": 34,
                                  "id": 96,
                                  "nodeType": "Return",
                                  "src": "1055:15:0"
                                }
                              ]
                            },
                            "id": 98,
                            "nodeType": "IfStatement",
                            "src": "937:144:0",
                            "trueBody": {
                              "id": 94,
                              "nodeType": "Block",
                              "src": "984:43:0",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "5061696e66756c6c79",
                                    "id": 92,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1005:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2816e2247d04828f5eb5890356603915dbcf1fcf7c0a8f1b66f3e94517be7269",
                                      "typeString": "literal_string \"Painfully\""
                                    },
                                    "value": "Painfully"
                                  },
                                  "functionReturnParameters": 34,
                                  "id": 93,
                                  "nodeType": "Return",
                                  "src": "998:18:0"
                                }
                              ]
                            }
                          },
                          "id": 99,
                          "nodeType": "IfStatement",
                          "src": "839:242:0",
                          "trueBody": {
                            "id": 84,
                            "nodeType": "Block",
                            "src": "883:40:0",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "4c6f6e656c79",
                                  "id": 82,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "904:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f7ba701305fc30c8a39152a02e0522bf8d6b75b54f46f2ee7cae54d2bd8e39b",
                                    "typeString": "literal_string \"Lonely\""
                                  },
                                  "value": "Lonely"
                                },
                                "functionReturnParameters": 34,
                                "id": 83,
                                "nodeType": "Return",
                                "src": "897:15:0"
                              }
                            ]
                          }
                        },
                        "id": 100,
                        "nodeType": "IfStatement",
                        "src": "733:348:0",
                        "trueBody": {
                          "id": 74,
                          "nodeType": "Block",
                          "src": "781:44:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "507572706f736566756c",
                                "id": 72,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "802:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2b5912878b2fa398ebe7e0dc0750031a33d8383fdf4f69ffad4bef0350b9b321",
                                  "typeString": "literal_string \"Purposeful\""
                                },
                                "value": "Purposeful"
                              },
                              "functionReturnParameters": 34,
                              "id": 73,
                              "nodeType": "Return",
                              "src": "795:19:0"
                            }
                          ]
                        }
                      },
                      "id": 101,
                      "nodeType": "IfStatement",
                      "src": "641:440:0",
                      "trueBody": {
                        "id": 64,
                        "nodeType": "Block",
                        "src": "682:37:0",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "536164",
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "703:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a17ec0fb9ee611d156c5e025b2d40cf66fb25dd028ca76863f9f9c5cb881dcd4",
                                "typeString": "literal_string \"Sad\""
                              },
                              "value": "Sad"
                            },
                            "functionReturnParameters": 34,
                            "id": 63,
                            "nodeType": "Return",
                            "src": "696:12:0"
                          }
                        ]
                      }
                    },
                    "id": 102,
                    "nodeType": "IfStatement",
                    "src": "541:540:0",
                    "trueBody": {
                      "id": 54,
                      "nodeType": "Block",
                      "src": "586:41:0",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "416e78696f7573",
                            "id": 52,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "607:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0c75770b767569a10995b5907922cd1ab0e1f1030d6371cf61b53f91ad554eb4",
                              "typeString": "literal_string \"Anxious\""
                            },
                            "value": "Anxious"
                          },
                          "functionReturnParameters": 34,
                          "id": 53,
                          "nodeType": "Return",
                          "src": "600:16:0"
                        }
                      ]
                    }
                  },
                  "id": 103,
                  "nodeType": "IfStatement",
                  "src": "447:634:0",
                  "trueBody": {
                    "id": 44,
                    "nodeType": "Block",
                    "src": "488:39:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "4861707079",
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "509:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_45b457a9c257beb133f6f46ac26985991bbd831bf75ea15efc3bf96f333f9292",
                            "typeString": "literal_string \"Happy\""
                          },
                          "value": "Happy"
                        },
                        "functionReturnParameters": 34,
                        "id": 43,
                        "nodeType": "Return",
                        "src": "502:14:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "9d0c1397",
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMood",
            "nameLocation": "393:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "400:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "423:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "422:15:0"
            },
            "scope": 263,
            "src": "384:703:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "1147:93:0",
              "statements": [
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 110,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1157:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 113,
                      "indexExpression": {
                        "expression": {
                          "id": 111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1163:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1163:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1157:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 114,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1177:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Happy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "1177:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1157:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$12",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:36:0"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 118,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1203:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 121,
                      "indexExpression": {
                        "expression": {
                          "id": 119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1212:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1212:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1203:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4861707079",
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1226:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_45b457a9c257beb133f6f46ac26985991bbd831bf75ea15efc3bf96f333f9292",
                        "typeString": "literal_string \"Happy\""
                      },
                      "value": "Happy"
                    },
                    "src": "1203:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:30:0"
                }
              ]
            },
            "functionSelector": "d509e0e6",
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 108,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 107,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 262,
                  "src": "1133:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1133:13:0"
              }
            ],
            "name": "setHappyMood",
            "nameLocation": "1103:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1115:2:0"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1147:0:0"
            },
            "scope": 263,
            "src": "1094:146:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1301:98:0",
              "statements": [
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 131,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1311:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 134,
                      "indexExpression": {
                        "expression": {
                          "id": 132,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1317:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1317:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1311:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 135,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1331:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Anxious",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "1331:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1311:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$12",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:38:0"
                },
                {
                  "expression": {
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 139,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1359:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "expression": {
                          "id": 140,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1368:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1368:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1359:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "416e78696f7573",
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1382:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_0c75770b767569a10995b5907922cd1ab0e1f1030d6371cf61b53f91ad554eb4",
                        "typeString": "literal_string \"Anxious\""
                      },
                      "value": "Anxious"
                    },
                    "src": "1359:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1359:32:0"
                }
              ]
            },
            "functionSelector": "dce5004b",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 129,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 128,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 262,
                  "src": "1287:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1287:13:0"
              }
            ],
            "name": "setAnxiousMood",
            "nameLocation": "1255:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1269:2:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:0"
            },
            "scope": 263,
            "src": "1246:153:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 167,
              "nodeType": "Block",
              "src": "1456:90:0",
              "statements": [
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 152,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1466:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 155,
                      "indexExpression": {
                        "expression": {
                          "id": 153,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1472:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1472:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1466:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 156,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1486:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Sad",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "1486:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1466:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$12",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1466:34:0"
                },
                {
                  "expression": {
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 160,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1510:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 163,
                      "indexExpression": {
                        "expression": {
                          "id": 161,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1519:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1519:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1510:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "536164",
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1533:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a17ec0fb9ee611d156c5e025b2d40cf66fb25dd028ca76863f9f9c5cb881dcd4",
                        "typeString": "literal_string \"Sad\""
                      },
                      "value": "Sad"
                    },
                    "src": "1510:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:28:0"
                }
              ]
            },
            "functionSelector": "1da7f064",
            "id": 168,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 150,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 149,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 262,
                  "src": "1442:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1442:13:0"
              }
            ],
            "name": "setSadMood",
            "nameLocation": "1414:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:2:0"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1456:0:0"
            },
            "scope": 263,
            "src": "1405:141:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "1610:104:0",
              "statements": [
                {
                  "expression": {
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 173,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1620:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 176,
                      "indexExpression": {
                        "expression": {
                          "id": 174,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1626:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1626:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1620:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 177,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1640:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Purposeful",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "1640:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1620:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$12",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:41:0"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 181,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1671:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 184,
                      "indexExpression": {
                        "expression": {
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1680:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1680:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1671:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "507572706f736566756c",
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1694:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_2b5912878b2fa398ebe7e0dc0750031a33d8383fdf4f69ffad4bef0350b9b321",
                        "typeString": "literal_string \"Purposeful\""
                      },
                      "value": "Purposeful"
                    },
                    "src": "1671:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "1671:35:0"
                }
              ]
            },
            "functionSelector": "768dd084",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 171,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 170,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 262,
                  "src": "1596:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1596:13:0"
              }
            ],
            "name": "setPurposefulMood",
            "nameLocation": "1561:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1578:2:0"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:0:0"
            },
            "scope": 263,
            "src": "1552:162:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "1774:99:0",
              "statements": [
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 194,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1784:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 197,
                      "indexExpression": {
                        "expression": {
                          "id": 195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1790:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1790:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1784:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 198,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1804:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Lonely",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "1804:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1784:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$12",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:37:0"
                },
                {
                  "expression": {
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 202,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1834:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 205,
                      "indexExpression": {
                        "expression": {
                          "id": 203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1843:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1843:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1834:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4c6f6e656c79",
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1857:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6f7ba701305fc30c8a39152a02e0522bf8d6b75b54f46f2ee7cae54d2bd8e39b",
                        "typeString": "literal_string \"Lonely\""
                      },
                      "value": "Lonely"
                    },
                    "src": "1834:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1834:31:0"
                }
              ]
            },
            "functionSelector": "6fb815f8",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 192,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 191,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 262,
                  "src": "1760:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1760:13:0"
              }
            ],
            "name": "setLonelyMood",
            "nameLocation": "1729:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1742:2:0"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1774:0:0"
            },
            "scope": 263,
            "src": "1720:153:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "1936:101:0",
              "statements": [
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 215,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1946:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 218,
                      "indexExpression": {
                        "expression": {
                          "id": 216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1952:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1952:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1946:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 219,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1966:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Painfully",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1966:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1946:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$12",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:40:0"
                },
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 223,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1996:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 226,
                      "indexExpression": {
                        "expression": {
                          "id": 224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2005:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2005:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1996:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "5061696e66756c6c79",
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2019:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_2816e2247d04828f5eb5890356603915dbcf1fcf7c0a8f1b66f3e94517be7269",
                        "typeString": "literal_string \"Painfully\""
                      },
                      "value": "Painfully"
                    },
                    "src": "1996:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:34:0"
                }
              ]
            },
            "functionSelector": "fe5214ed",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 212,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 262,
                  "src": "1922:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1922:13:0"
              }
            ],
            "name": "setPainfullyMood",
            "nameLocation": "1888:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1904:2:0"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1936:0:0"
            },
            "scope": 263,
            "src": "1879:158:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "2086:81:0",
              "statements": [
                {
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 236,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "2096:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$12_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 238,
                      "indexExpression": {
                        "id": 237,
                        "name": "_who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "2102:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2096:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 239,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2110:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$12_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Moody",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "2110:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$12",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "2096:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$12",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:30:0"
                },
                {
                  "expression": {
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 243,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "2136:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 245,
                      "indexExpression": {
                        "id": 244,
                        "name": "_who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "2145:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2136:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4d6f6f6479",
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2153:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ba2a0f9a9bd69331ac79541d16b2145abce2d4e46bd98110c31002a9150b01c1",
                        "typeString": "literal_string \"Moody\""
                      },
                      "value": "Moody"
                    },
                    "src": "2136:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:24:0"
                }
              ]
            },
            "functionSelector": "06219126",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUniqueMood",
            "nameLocation": "2051:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_who",
                  "nameLocation": "2073:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "2065:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2064:14:0"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2086:0:0"
            },
            "scope": 263,
            "src": "2042:125:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "2196:123:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 253,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2214:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2214:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "302e3032",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2227:10:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000000000000000_by_1",
                            "typeString": "int_const 20000000000000000"
                          },
                          "value": "0.02"
                        },
                        "src": "2214:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656e6420302e30322065746820746f2073657420596f7572204d6f6f6420616e6420476574207375727072697365",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2239:61:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48",
                          "typeString": "literal_string \"You need to send 0.02 eth to set Your Mood and Get surprise\""
                        },
                        "value": "You need to send 0.02 eth to set Your Mood and Get surprise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ad2c5a1269aec5102e57f23e222637b960dc3ee99dbc700d841b17a22d5ee48",
                          "typeString": "literal_string \"You need to send 0.02 eth to set Your Mood and Get surprise\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2206:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2206:95:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:95:0"
                },
                {
                  "id": 260,
                  "nodeType": "PlaceholderStatement",
                  "src": "2311:1:0"
                }
              ]
            },
            "id": 262,
            "name": "YouCantAfford",
            "nameLocation": "2182:13:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2196:0:0"
            },
            "src": "2173:146:0",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 264,
        "src": "65:2256:0",
        "usedErrors": []
      }
    ],
    "src": "39:2282:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xe27d40D3B3F0647B85D0A0e8391D6Dea9600d704",
      "transactionHash": "0x690494bb304053141186c5a5718823d32b6fc65e5f587b3ca2b544c99f68497d"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-23T21:50:47.852Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}