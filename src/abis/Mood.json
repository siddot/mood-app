{
  "contractName": "Mood",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "moods",
      "outputs": [
        {
          "internalType": "enum Mood.MoodStates",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "moodsStr",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMood",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "setHappyMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "setAnxiousMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "setSadMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "setPurposefulMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "setLonelyMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "setPainfullyMood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getMood\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"moods\",\"outputs\":[{\"internalType\":\"enum Mood.MoodStates\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"moodsStr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setAnxiousMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setHappyMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setLonelyMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setPainfullyMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setPurposefulMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSadMood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Mood.sol\":\"Mood\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Mood.sol\":{\"keccak256\":\"0x4616413e0cc4f7f7ec2b62534282841ca7b21b2ed9f6a754773048b1ca7d3511\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://04b59b102d5589457fcc94a43bae9fda5202e5a69ebada0ee3fe77daa3fe3eb2\",\"dweb:/ipfs/QmXD4an1WV74LfeTfcykdvtLyB3nVFBFu459NhyEh5SJ7N\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611242806100606000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b1461012e5780639d0c139714610159578063d509e0e614610184578063dce5004b1461018e578063fe5214ed1461019857610091565b80631da7f0641461009657806369d2b352146100a05780636fb815f8146100dd578063768dd084146100e75780638b17c341146100f1575b600080fd5b61009e6101a2565b005b3480156100ac57600080fd5b506100c760048036038101906100c29190610f75565b6102de565b6040516100d49190611019565b60405180910390f35b6100e56102fe565b005b6100ef61043a565b005b3480156100fd57600080fd5b5061011860048036038101906101139190610f75565b610576565b60405161012591906110cd565b60405180910390f35b34801561013a57600080fd5b50610143610616565b60405161015091906110fe565b60405180910390f35b34801561016557600080fd5b5061016e61063a565b60405161017b91906110cd565b60405180910390f35b61018c610abc565b005b610196610bf8565b005b6101a0610d33565b005b66470de4df82000034146101eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e29061118b565b60405180910390fd5b6002600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600681111561024e5761024d610fa2565b5b02179055506040518060400160405280600381526020017f5361640000000000000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906102db929190610e6f565b50565b60016020528060005260406000206000915054906101000a900460ff1681565b66470de4df8200003414610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e9061118b565b60405180910390fd5b6004600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360068111156103aa576103a9610fa2565b5b02179055506040518060400160405280600681526020017f4c6f6e656c790000000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610437929190610e6f565b50565b66470de4df8200003414610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a9061118b565b60405180910390fd5b6003600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360068111156104e6576104e5610fa2565b5b02179055506040518060400160405280600a81526020017f507572706f736566756c00000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610573929190610e6f565b50565b60026020528060005260406000206000915090508054610595906111da565b80601f01602080910402602001604051908101604052809291908181526020018280546105c1906111da565b801561060e5780601f106105e35761010080835404028352916020019161060e565b820191906000526020600020905b8154815290600101906020018083116105f157829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600060068111156106505761064f610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660068111156106af576106ae610fa2565b5b14156106f2576040518060400160405280600581526020017f48617070790000000000000000000000000000000000000000000000000000008152509050610ab9565b6001600681111561070657610705610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600681111561076557610764610fa2565b5b14156107a8576040518060400160405280600781526020017f416e78696f7573000000000000000000000000000000000000000000000000008152509050610ab9565b600260068111156107bc576107bb610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600681111561081b5761081a610fa2565b5b141561085e576040518060400160405280600381526020017f53616400000000000000000000000000000000000000000000000000000000008152509050610ab9565b6003600681111561087257610871610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660068111156108d1576108d0610fa2565b5b1415610914576040518060400160405280600a81526020017f507572706f736566756c000000000000000000000000000000000000000000008152509050610ab9565b6004600681111561092857610927610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600681111561098757610986610fa2565b5b14156109ca576040518060400160405280600681526020017f4c6f6e656c7900000000000000000000000000000000000000000000000000008152509050610ab9565b600560068111156109de576109dd610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166006811115610a3d57610a3c610fa2565b5b1415610a80576040518060400160405280600981526020017f5061696e66756c6c7900000000000000000000000000000000000000000000008152509050610ab9565b6040518060400160405280600681526020017f4e6f4d6f6f64000000000000000000000000000000000000000000000000000081525090505b90565b66470de4df8200003414610b05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afc9061118b565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836006811115610b6857610b67610fa2565b5b02179055506040518060400160405280600581526020017f4861707079000000000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610bf5929190610e6f565b50565b66470de4df8200003414610c41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c389061118b565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836006811115610ca357610ca2610fa2565b5b02179055506040518060400160405280600781526020017f416e78696f757300000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610d30929190610e6f565b50565b66470de4df8200003414610d7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d739061118b565b60405180910390fd5b6005600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836006811115610ddf57610dde610fa2565b5b02179055506040518060400160405280600981526020017f5061696e66756c6c790000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610e6c929190610e6f565b50565b828054610e7b906111da565b90600052602060002090601f016020900481019282610e9d5760008555610ee4565b82601f10610eb657805160ff1916838001178555610ee4565b82800160010185558215610ee4579182015b82811115610ee3578251825591602001919060010190610ec8565b5b509050610ef19190610ef5565b5090565b5b80821115610f0e576000816000905550600101610ef6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f4282610f17565b9050919050565b610f5281610f37565b8114610f5d57600080fd5b50565b600081359050610f6f81610f49565b92915050565b600060208284031215610f8b57610f8a610f12565b5b6000610f9984828501610f60565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110610fe257610fe1610fa2565b5b50565b6000819050610ff382610fd1565b919050565b600061100382610fe5565b9050919050565b61101381610ff8565b82525050565b600060208201905061102e600083018461100a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561106e578082015181840152602081019050611053565b8381111561107d576000848401525b50505050565b6000601f19601f8301169050919050565b600061109f82611034565b6110a9818561103f565b93506110b9818560208601611050565b6110c281611083565b840191505092915050565b600060208201905081810360008301526110e78184611094565b905092915050565b6110f881610f37565b82525050565b600060208201905061111360008301846110ef565b92915050565b7f596f75206e65656420746f2073656e6420312065746820746f2073657420596f60008201527f7572204d6f6f6420616e64204765742073757270726973650000000000000000602082015250565b600061117560388361103f565b915061118082611119565b604082019050919050565b600060208201905081810360008301526111a481611168565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111f257607f821691505b60208210811415611206576112056111ab565b5b5091905056fea2646970667358221220f1f5773f312e791b5a512d4e94f552352904f4a9b768eaf7a56ae4b48bb5727264736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b1461012e5780639d0c139714610159578063d509e0e614610184578063dce5004b1461018e578063fe5214ed1461019857610091565b80631da7f0641461009657806369d2b352146100a05780636fb815f8146100dd578063768dd084146100e75780638b17c341146100f1575b600080fd5b61009e6101a2565b005b3480156100ac57600080fd5b506100c760048036038101906100c29190610f75565b6102de565b6040516100d49190611019565b60405180910390f35b6100e56102fe565b005b6100ef61043a565b005b3480156100fd57600080fd5b5061011860048036038101906101139190610f75565b610576565b60405161012591906110cd565b60405180910390f35b34801561013a57600080fd5b50610143610616565b60405161015091906110fe565b60405180910390f35b34801561016557600080fd5b5061016e61063a565b60405161017b91906110cd565b60405180910390f35b61018c610abc565b005b610196610bf8565b005b6101a0610d33565b005b66470de4df82000034146101eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e29061118b565b60405180910390fd5b6002600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600681111561024e5761024d610fa2565b5b02179055506040518060400160405280600381526020017f5361640000000000000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906102db929190610e6f565b50565b60016020528060005260406000206000915054906101000a900460ff1681565b66470de4df8200003414610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e9061118b565b60405180910390fd5b6004600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360068111156103aa576103a9610fa2565b5b02179055506040518060400160405280600681526020017f4c6f6e656c790000000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610437929190610e6f565b50565b66470de4df8200003414610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a9061118b565b60405180910390fd5b6003600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360068111156104e6576104e5610fa2565b5b02179055506040518060400160405280600a81526020017f507572706f736566756c00000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610573929190610e6f565b50565b60026020528060005260406000206000915090508054610595906111da565b80601f01602080910402602001604051908101604052809291908181526020018280546105c1906111da565b801561060e5780601f106105e35761010080835404028352916020019161060e565b820191906000526020600020905b8154815290600101906020018083116105f157829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600060068111156106505761064f610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660068111156106af576106ae610fa2565b5b14156106f2576040518060400160405280600581526020017f48617070790000000000000000000000000000000000000000000000000000008152509050610ab9565b6001600681111561070657610705610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600681111561076557610764610fa2565b5b14156107a8576040518060400160405280600781526020017f416e78696f7573000000000000000000000000000000000000000000000000008152509050610ab9565b600260068111156107bc576107bb610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600681111561081b5761081a610fa2565b5b141561085e576040518060400160405280600381526020017f53616400000000000000000000000000000000000000000000000000000000008152509050610ab9565b6003600681111561087257610871610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660068111156108d1576108d0610fa2565b5b1415610914576040518060400160405280600a81526020017f507572706f736566756c000000000000000000000000000000000000000000008152509050610ab9565b6004600681111561092857610927610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600681111561098757610986610fa2565b5b14156109ca576040518060400160405280600681526020017f4c6f6e656c7900000000000000000000000000000000000000000000000000008152509050610ab9565b600560068111156109de576109dd610fa2565b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166006811115610a3d57610a3c610fa2565b5b1415610a80576040518060400160405280600981526020017f5061696e66756c6c7900000000000000000000000000000000000000000000008152509050610ab9565b6040518060400160405280600681526020017f4e6f4d6f6f64000000000000000000000000000000000000000000000000000081525090505b90565b66470de4df8200003414610b05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afc9061118b565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836006811115610b6857610b67610fa2565b5b02179055506040518060400160405280600581526020017f4861707079000000000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610bf5929190610e6f565b50565b66470de4df8200003414610c41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c389061118b565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836006811115610ca357610ca2610fa2565b5b02179055506040518060400160405280600781526020017f416e78696f757300000000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610d30929190610e6f565b50565b66470de4df8200003414610d7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d739061118b565b60405180910390fd5b6005600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836006811115610ddf57610dde610fa2565b5b02179055506040518060400160405280600981526020017f5061696e66756c6c790000000000000000000000000000000000000000000000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610e6c929190610e6f565b50565b828054610e7b906111da565b90600052602060002090601f016020900481019282610e9d5760008555610ee4565b82601f10610eb657805160ff1916838001178555610ee4565b82800160010185558215610ee4579182015b82811115610ee3578251825591602001919060010190610ec8565b5b509050610ef19190610ef5565b5090565b5b80821115610f0e576000816000905550600101610ef6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f4282610f17565b9050919050565b610f5281610f37565b8114610f5d57600080fd5b50565b600081359050610f6f81610f49565b92915050565b600060208284031215610f8b57610f8a610f12565b5b6000610f9984828501610f60565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110610fe257610fe1610fa2565b5b50565b6000819050610ff382610fd1565b919050565b600061100382610fe5565b9050919050565b61101381610ff8565b82525050565b600060208201905061102e600083018461100a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561106e578082015181840152602081019050611053565b8381111561107d576000848401525b50505050565b6000601f19601f8301169050919050565b600061109f82611034565b6110a9818561103f565b93506110b9818560208601611050565b6110c281611083565b840191505092915050565b600060208201905081810360008301526110e78184611094565b905092915050565b6110f881610f37565b82525050565b600060208201905061111360008301846110ef565b92915050565b7f596f75206e65656420746f2073656e6420312065746820746f2073657420596f60008201527f7572204d6f6f6420616e64204765742073757270726973650000000000000000602082015250565b600061117560388361103f565b915061118082611119565b604082019050919050565b600060208201905081810360008301526111a481611168565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111f257607f821691505b60208210811415611206576112056111ab565b5b5091905056fea2646970667358221220f1f5773f312e791b5a512d4e94f552352904f4a9b768eaf7a56ae4b48bb5727264736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5478:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:3",
                "type": ""
              }
            ],
            "src": "7:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:3",
                "type": ""
              }
            ],
            "src": "334:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:3",
                "type": ""
              }
            ],
            "src": "466:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:3",
                "type": ""
              }
            ],
            "src": "568:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:3",
                "type": ""
              }
            ],
            "src": "696:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:3",
                "type": ""
              }
            ],
            "src": "841:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1204:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1221:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1224:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1214:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1214:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1318:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1321:4:3",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1311:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1311:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1311:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1342:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1345:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1335:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1335:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1335:15:3"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1176:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1418:62:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1452:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "1454:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1454:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1454:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1441:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1448:1:3",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1438:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1438:12:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1431:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1431:20:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1428:46:3"
                }
              ]
            },
            "name": "validator_assert_t_enum$_MoodStates_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1411:5:3",
                "type": ""
              }
            ],
            "src": "1362:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1544:79:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1554:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1565:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1554:7:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1611:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_MoodStates_$11",
                      "nodeType": "YulIdentifier",
                      "src": "1571:39:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1571:46:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1571:46:3"
                }
              ]
            },
            "name": "cleanup_t_enum$_MoodStates_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1526:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1536:7:3",
                "type": ""
              }
            ],
            "src": "1486:137:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1700:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1710:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1754:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_MoodStates_$11",
                      "nodeType": "YulIdentifier",
                      "src": "1723:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1723:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1710:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_MoodStates_$11_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1680:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1690:9:3",
                "type": ""
              }
            ],
            "src": "1629:137:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1848:77:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1865:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1912:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_MoodStates_$11_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1870:41:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1870:48:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1858:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1858:61:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1858:61:3"
                }
              ]
            },
            "name": "abi_encode_t_enum$_MoodStates_$11_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1836:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1843:3:3",
                "type": ""
              }
            ],
            "src": "1772:153:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2040:135:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2050:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2062:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2073:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2058:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2058:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2050:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2141:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2154:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2165:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2150:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2150:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_MoodStates_$11_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2086:54:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2086:82:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2086:82:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_MoodStates_$11__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2012:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2024:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2035:4:3",
                "type": ""
              }
            ],
            "src": "1931:244:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2240:40:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2251:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2267:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2261:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2261:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2251:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2223:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2233:6:3",
                "type": ""
              }
            ],
            "src": "2181:99:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2382:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2399:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2404:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2392:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2392:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2392:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2420:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2439:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2444:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2435:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2435:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2420:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2354:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2359:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2370:11:3",
                "type": ""
              }
            ],
            "src": "2286:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2510:258:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2520:10:3",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2529:1:3",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2524:1:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2589:63:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2614:3:3"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2619:1:3"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2610:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2610:11:3"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2633:3:3"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2638:1:3"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2629:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2629:11:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2623:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2623:18:3"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2603:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2603:39:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2603:39:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2550:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2553:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2547:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2547:13:3"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2561:19:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2563:15:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2572:1:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2575:2:3",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2568:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2568:10:3"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2563:1:3"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2543:3:3",
                    "statements": []
                  },
                  "src": "2539:113:3"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2686:76:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2736:3:3"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2741:6:3"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2732:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2732:16:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2750:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2725:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2725:27:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2725:27:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2667:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2670:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2664:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2664:13:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2661:101:3"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2492:3:3",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2497:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2502:6:3",
                "type": ""
              }
            ],
            "src": "2461:307:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2822:54:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2832:38:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2850:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2857:2:3",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2846:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2846:14:3"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2866:2:3",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2862:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2862:7:3"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2842:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2842:28:3"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "2832:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2805:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "2815:6:3",
                "type": ""
              }
            ],
            "src": "2774:102:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2974:272:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2984:53:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3031:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2998:32:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2998:39:3"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2988:6:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3046:78:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3112:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3117:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3053:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3053:71:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3046:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3159:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3166:4:3",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3155:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3155:16:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3173:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3178:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3133:21:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3133:52:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3133:52:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3194:46:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3205:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3232:6:3"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3210:21:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3210:29:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3201:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3201:39:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3194:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2955:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2962:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2970:3:3",
                "type": ""
              }
            ],
            "src": "2882:364:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3370:195:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3380:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3392:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3403:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3388:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3388:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3380:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3427:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3438:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3423:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3423:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3446:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3452:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3442:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3442:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3416:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3416:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3416:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3472:86:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3544:6:3"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3553:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3480:63:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3480:78:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3472:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3342:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3354:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3365:4:3",
                "type": ""
              }
            ],
            "src": "3252:313:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3636:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3653:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3676:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3658:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3658:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3646:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3646:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3646:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3624:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3631:3:3",
                "type": ""
              }
            ],
            "src": "3571:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3793:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3803:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3815:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3826:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3811:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3811:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3803:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3883:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3896:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3907:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3892:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3892:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3839:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3839:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3839:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3765:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3777:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3788:4:3",
                "type": ""
              }
            ],
            "src": "3695:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4029:137:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4051:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4059:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4047:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4047:14:3"
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656e6420312065746820746f2073657420596f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4063:34:3",
                        "type": "",
                        "value": "You need to send 1 eth to set Yo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4040:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4040:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4040:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4119:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4127:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4115:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4115:15:3"
                      },
                      {
                        "hexValue": "7572204d6f6f6420616e6420476574207375727072697365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4132:26:3",
                        "type": "",
                        "value": "ur Mood and Get surprise"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4108:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4108:51:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4108:51:3"
                }
              ]
            },
            "name": "store_literal_in_memory_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4021:6:3",
                "type": ""
              }
            ],
            "src": "3923:243:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4318:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4328:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4394:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4399:2:3",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4335:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4335:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4328:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4500:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22",
                      "nodeType": "YulIdentifier",
                      "src": "4411:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4411:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4411:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4513:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4524:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4529:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4520:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4520:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4513:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4306:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4314:3:3",
                "type": ""
              }
            ],
            "src": "4172:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4715:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4725:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4737:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4748:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4733:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4733:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4725:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4772:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4783:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4768:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4768:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4791:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4797:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4787:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4787:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4761:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4761:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4761:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4817:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4951:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4825:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4825:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4817:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4695:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4710:4:3",
                "type": ""
              }
            ],
            "src": "4544:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4997:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5014:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5017:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5007:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5007:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5007:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5111:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5114:4:3",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5104:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5104:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5104:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5135:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5138:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5128:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5128:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5128:15:3"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "4969:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5206:269:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5216:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5230:4:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5236:1:3",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "5226:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5226:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5216:6:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5247:38:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5277:4:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5283:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5273:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5273:12:3"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5251:18:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5324:51:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5338:27:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5352:6:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5360:4:3",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5348:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5348:17:3"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5338:6:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5304:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5297:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5297:26:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5294:81:3"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5427:42:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "5441:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5441:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5441:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5391:18:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5414:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5422:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5411:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5411:14:3"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5388:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5388:38:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5385:84:3"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5190:4:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5199:6:3",
                "type": ""
              }
            ],
            "src": "5155:320:3"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_MoodStates_$11(value) {\n        if iszero(lt(value, 7)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_MoodStates_$11(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_MoodStates_$11(value)\n    }\n\n    function convert_t_enum$_MoodStates_$11_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_MoodStates_$11(value)\n    }\n\n    function abi_encode_t_enum$_MoodStates_$11_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_MoodStates_$11_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_MoodStates_$11__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_MoodStates_$11_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22(memPtr) {\n\n        mstore(add(memPtr, 0), \"You need to send 1 eth to set Yo\")\n\n        mstore(add(memPtr, 32), \"ur Mood and Get surprise\")\n\n    }\n\n    function abi_encode_t_stringliteral_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "64:2116:0:-:0;;;322:48;;;;;;;;;;353:10;345:5;;:18;;;;;;;;;;;;;;;;;;64:2116;;;;;;",
  "deployedSourceMap": "64:2116:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:141;;;:::i;:::-;;204:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1711:153;;;:::i;:::-;;1543:162;;;:::i;:::-;;254:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;95:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:703;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1085:146;;;:::i;:::-;;1237:153;;;:::i;:::-;;1870:159;;;:::i;:::-;;1396:141;2089:10;2076:9;:23;2068:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1477:14:::1;1457:5;:17;1463:10;1457:17;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1501:28;;;;;;;;;;;;;;;;::::0;:8:::1;:20;1510:10;1501:20;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:::i;:::-;;1396:141::o:0;204:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;1711:153::-;2089:10;2076:9;:23;2068:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1795:17:::1;1775:5;:17;1781:10;1775:17;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1825:31;;;;;;;;;;;;;;;;::::0;:8:::1;:20;1834:10;1825:20;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1711:153::o:0;1543:162::-;2089:10;2076:9;:23;2068:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1631:21:::1;1611:5;:17;1617:10;1611:17;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1662:35;;;;;;;;;;;;;;;;::::0;:8:::1;:20;1671:10;1662:20;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:::i;:::-;;1543:162::o:0;254:43::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;95:20::-;;;;;;;;;;;;:::o;376:703::-;415:13;463:16;442:37;;;;;;;;:::i;:::-;;:5;:17;448:10;442:17;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;439:634;;;494:14;;;;;;;;;;;;;;;;;;;;;439:634;558:18;537:39;;;;;;;;:::i;:::-;;:5;:17;543:10;537:17;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;;;;;;:::i;:::-;;;533:540;;;592:16;;;;;;;;;;;;;;;;;;;;;533:540;658:14;637:35;;;;;;;;:::i;:::-;;:5;:17;643:10;637:17;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;:::i;:::-;;;633:440;;;688:12;;;;;;;;;;;;;;;;;;;;;633:440;750:21;729:42;;;;;;;;:::i;:::-;;:5;:17;735:10;729:17;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;;;;;:::i;:::-;;;725:348;;;787:19;;;;;;;;;;;;;;;;;;;;;725:348;856:17;835:38;;;;;;;;:::i;:::-;;:5;:17;841:10;835:17;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;;;;;;:::i;:::-;;;831:242;;;889:15;;;;;;;;;;;;;;;;;;;;;831:242;954:20;933:41;;;;;;;;:::i;:::-;;:5;:17;939:10;933:17;;;;;;;;;;;;;;;;;;;;;;;;;:41;;;;;;;;:::i;:::-;;;929:144;;;990:18;;;;;;;;;;;;;;;;;;;;;929:144;1047:15;;;;;;;;;;;;;;;;;;;376:703;;:::o;1085:146::-;2089:10;2076:9;:23;2068:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1168:16:::1;1148:5;:17;1154:10;1148:17;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1194:30;;;;;;;;;;;;;;;;::::0;:8:::1;:20;1203:10;1194:20;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:::i;:::-;;1085:146::o:0;1237:153::-;2089:10;2076:9;:23;2068:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1322:18:::1;1302:5:::0;:17:::1;1308:10;1302:17;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1350:32;;;;;;;;;;;;;;;;::::0;:8:::1;:20;1359:10;1350:20;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:::i;:::-;;1237:153::o:0;1870:159::-;2089:10;2076:9;:23;2068:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1957:20:::1;1937:5;:17;1943:10;1937:17;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1987:34;;;;;;;;;;;;;;;;::::0;:8:::1;:20;1996:10;1987:20;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:::i;:::-;;1870:159::o:0;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:180::-;1224:77;1221:1;1214:88;1321:4;1318:1;1311:15;1345:4;1342:1;1335:15;1362:118;1448:1;1441:5;1438:12;1428:46;;1454:18;;:::i;:::-;1428:46;1362:118;:::o;1486:137::-;1536:7;1565:5;1554:16;;1571:46;1611:5;1571:46;:::i;:::-;1486:137;;;:::o;1629:::-;1690:9;1723:37;1754:5;1723:37;:::i;:::-;1710:50;;1629:137;;;:::o;1772:153::-;1870:48;1912:5;1870:48;:::i;:::-;1865:3;1858:61;1772:153;;:::o;1931:244::-;2035:4;2073:2;2062:9;2058:18;2050:26;;2086:82;2165:1;2154:9;2150:17;2141:6;2086:82;:::i;:::-;1931:244;;;;:::o;2181:99::-;2233:6;2267:5;2261:12;2251:22;;2181:99;;;:::o;2286:169::-;2370:11;2404:6;2399:3;2392:19;2444:4;2439:3;2435:14;2420:29;;2286:169;;;;:::o;2461:307::-;2529:1;2539:113;2553:6;2550:1;2547:13;2539:113;;;2638:1;2633:3;2629:11;2623:18;2619:1;2614:3;2610:11;2603:39;2575:2;2572:1;2568:10;2563:15;;2539:113;;;2670:6;2667:1;2664:13;2661:101;;;2750:1;2741:6;2736:3;2732:16;2725:27;2661:101;2510:258;2461:307;;;:::o;2774:102::-;2815:6;2866:2;2862:7;2857:2;2850:5;2846:14;2842:28;2832:38;;2774:102;;;:::o;2882:364::-;2970:3;2998:39;3031:5;2998:39;:::i;:::-;3053:71;3117:6;3112:3;3053:71;:::i;:::-;3046:78;;3133:52;3178:6;3173:3;3166:4;3159:5;3155:16;3133:52;:::i;:::-;3210:29;3232:6;3210:29;:::i;:::-;3205:3;3201:39;3194:46;;2974:272;2882:364;;;;:::o;3252:313::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3452:9;3446:4;3442:20;3438:1;3427:9;3423:17;3416:47;3480:78;3553:4;3544:6;3480:78;:::i;:::-;3472:86;;3252:313;;;;:::o;3571:118::-;3658:24;3676:5;3658:24;:::i;:::-;3653:3;3646:37;3571:118;;:::o;3695:222::-;3788:4;3826:2;3815:9;3811:18;3803:26;;3839:71;3907:1;3896:9;3892:17;3883:6;3839:71;:::i;:::-;3695:222;;;;:::o;3923:243::-;4063:34;4059:1;4051:6;4047:14;4040:58;4132:26;4127:2;4119:6;4115:15;4108:51;3923:243;:::o;4172:366::-;4314:3;4335:67;4399:2;4394:3;4335:67;:::i;:::-;4328:74;;4411:93;4500:3;4411:93;:::i;:::-;4529:2;4524:3;4520:12;4513:19;;4172:366;;;:::o;4544:419::-;4710:4;4748:2;4737:9;4733:18;4725:26;;4797:9;4791:4;4787:20;4783:1;4772:9;4768:17;4761:47;4825:131;4951:4;4825:131;:::i;:::-;4817:139;;4544:419;;;:::o;4969:180::-;5017:77;5014:1;5007:88;5114:4;5111:1;5104:15;5138:4;5135:1;5128:15;5155:320;5199:6;5236:1;5230:4;5226:12;5216:22;;5283:1;5277:4;5273:12;5304:18;5294:81;;5360:4;5352:6;5348:17;5338:27;;5294:81;5422:2;5414:6;5411:14;5391:18;5388:38;5385:84;;;5441:18;;:::i;:::-;5385:84;5206:269;5155:320;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.10;\n\ncontract Mood {\n    //vars\n    address public owner;\n    enum MoodStates { Happy, Anxious, Sad, Purposeful, Lonely, Painfully, NoMood }\n    mapping (address => MoodStates) public moods;\n    mapping (address => string) public moodsStr;\n\n    //constructor\n    constructor(){\n        owner = msg.sender;\n    }\n\n    function getMood() public view returns(string memory){\n        if(moods[msg.sender] == MoodStates.Happy){\n            return \"Happy\";\n        }\n        else if (moods[msg.sender] == MoodStates.Anxious) {\n            return \"Anxious\";\n        }\n        else if (moods[msg.sender] == MoodStates.Sad) {\n            return \"Sad\";\n        }\n        else if (moods[msg.sender] == MoodStates.Purposeful) {\n            return \"Purposeful\";\n        }\n        else if (moods[msg.sender] == MoodStates.Lonely) {\n            return \"Lonely\";\n        }\n        else if (moods[msg.sender] == MoodStates.Painfully) {\n            return \"Painfully\";\n        }\n        else {\n            return \"NoMood\";\n        }\n    }\n\n    function setHappyMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Happy;\n        moodsStr[msg.sender] = \"Happy\";\n    }\n\n    function setAnxiousMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Anxious;\n        moodsStr[msg.sender] = \"Anxious\";\n\n    }\n\n    function setSadMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Sad;\n        moodsStr[msg.sender] = \"Sad\";\n\n    }\n\n    function setPurposefulMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Purposeful;\n        moodsStr[msg.sender] = \"Purposeful\";\n\n    }\n\n    function setLonelyMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Lonely;   \n        moodsStr[msg.sender] = \"Lonely\";\n\n    }\n\n    function setPainfullyMood() public payable YouCantAfford {\n        moods[msg.sender] = MoodStates.Painfully;\n        moodsStr[msg.sender] = \"Painfully\";\n\n    }\n\n    modifier YouCantAfford {\n        require(msg.value == 0.02 ether, \"You need to send 1 eth to set Your Mood and Get surprise\");\n        _;\n    }\n}",
  "sourcePath": "/Volumes/LaCie/Mood Website/mood-app/contracts/Mood.sol",
  "ast": {
    "absolutePath": "project:/contracts/Mood.sol",
    "exportedSymbols": {
      "Mood": [
        243
      ]
    },
    "id": 244,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Mood",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 243,
        "linearizedBaseContracts": [
          243
        ],
        "name": "Mood",
        "nameLocation": "73:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "110:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "95:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "95:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Mood.MoodStates",
            "id": 11,
            "members": [
              {
                "id": 4,
                "name": "Happy",
                "nameLocation": "139:5:0",
                "nodeType": "EnumValue",
                "src": "139:5:0"
              },
              {
                "id": 5,
                "name": "Anxious",
                "nameLocation": "146:7:0",
                "nodeType": "EnumValue",
                "src": "146:7:0"
              },
              {
                "id": 6,
                "name": "Sad",
                "nameLocation": "155:3:0",
                "nodeType": "EnumValue",
                "src": "155:3:0"
              },
              {
                "id": 7,
                "name": "Purposeful",
                "nameLocation": "160:10:0",
                "nodeType": "EnumValue",
                "src": "160:10:0"
              },
              {
                "id": 8,
                "name": "Lonely",
                "nameLocation": "172:6:0",
                "nodeType": "EnumValue",
                "src": "172:6:0"
              },
              {
                "id": 9,
                "name": "Painfully",
                "nameLocation": "180:9:0",
                "nodeType": "EnumValue",
                "src": "180:9:0"
              },
              {
                "id": 10,
                "name": "NoMood",
                "nameLocation": "191:6:0",
                "nodeType": "EnumValue",
                "src": "191:6:0"
              }
            ],
            "name": "MoodStates",
            "nameLocation": "126:10:0",
            "nodeType": "EnumDefinition",
            "src": "121:78:0"
          },
          {
            "constant": false,
            "functionSelector": "69d2b352",
            "id": 16,
            "mutability": "mutable",
            "name": "moods",
            "nameLocation": "243:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "204:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
              "typeString": "mapping(address => enum Mood.MoodStates)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "213:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "204:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                "typeString": "mapping(address => enum Mood.MoodStates)"
              },
              "valueType": {
                "id": 14,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 13,
                  "name": "MoodStates",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "224:10:0"
                },
                "referencedDeclaration": 11,
                "src": "224:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_MoodStates_$11",
                  "typeString": "enum Mood.MoodStates"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8b17c341",
            "id": 20,
            "mutability": "mutable",
            "name": "moodsStr",
            "nameLocation": "289:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "254:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "263:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "254:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 18,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "274:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "335:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "345:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 24,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "353:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "353:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "345:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "345:18:0"
                }
              ]
            },
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:2:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:0"
            },
            "scope": 243,
            "src": "322:48:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "429:650:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_MoodStates_$11",
                      "typeString": "enum Mood.MoodStates"
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 34,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "442:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 37,
                      "indexExpression": {
                        "expression": {
                          "id": 35,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "448:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "448:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "442:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 38,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "463:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Happy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "463:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "442:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 44,
                          "name": "moods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "537:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                            "typeString": "mapping(address => enum Mood.MoodStates)"
                          }
                        },
                        "id": 47,
                        "indexExpression": {
                          "expression": {
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "543:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "543:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "537:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MoodStates_$11",
                          "typeString": "enum Mood.MoodStates"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 48,
                          "name": "MoodStates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "558:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                            "typeString": "type(enum Mood.MoodStates)"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Anxious",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "558:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MoodStates_$11",
                          "typeString": "enum Mood.MoodStates"
                        }
                      },
                      "src": "537:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_MoodStates_$11",
                          "typeString": "enum Mood.MoodStates"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 54,
                            "name": "moods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "637:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                              "typeString": "mapping(address => enum Mood.MoodStates)"
                            }
                          },
                          "id": 57,
                          "indexExpression": {
                            "expression": {
                              "id": 55,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "643:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "643:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "637:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MoodStates_$11",
                            "typeString": "enum Mood.MoodStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 58,
                            "name": "MoodStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "658:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                              "typeString": "type(enum Mood.MoodStates)"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Sad",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "658:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MoodStates_$11",
                            "typeString": "enum Mood.MoodStates"
                          }
                        },
                        "src": "637:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_MoodStates_$11",
                            "typeString": "enum Mood.MoodStates"
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 64,
                              "name": "moods",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "729:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                                "typeString": "mapping(address => enum Mood.MoodStates)"
                              }
                            },
                            "id": 67,
                            "indexExpression": {
                              "expression": {
                                "id": 65,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "735:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 66,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "735:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "729:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MoodStates_$11",
                              "typeString": "enum Mood.MoodStates"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 68,
                              "name": "MoodStates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "750:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                                "typeString": "type(enum Mood.MoodStates)"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Purposeful",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "750:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MoodStates_$11",
                              "typeString": "enum Mood.MoodStates"
                            }
                          },
                          "src": "729:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_MoodStates_$11",
                              "typeString": "enum Mood.MoodStates"
                            },
                            "id": 80,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 74,
                                "name": "moods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "835:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                                  "typeString": "mapping(address => enum Mood.MoodStates)"
                                }
                              },
                              "id": 77,
                              "indexExpression": {
                                "expression": {
                                  "id": 75,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "841:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 76,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "841:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "835:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MoodStates_$11",
                                "typeString": "enum Mood.MoodStates"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 78,
                                "name": "MoodStates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "856:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                                  "typeString": "type(enum Mood.MoodStates)"
                                }
                              },
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Lonely",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8,
                              "src": "856:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MoodStates_$11",
                                "typeString": "enum Mood.MoodStates"
                              }
                            },
                            "src": "835:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MoodStates_$11",
                                "typeString": "enum Mood.MoodStates"
                              },
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 84,
                                  "name": "moods",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "933:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                                    "typeString": "mapping(address => enum Mood.MoodStates)"
                                  }
                                },
                                "id": 87,
                                "indexExpression": {
                                  "expression": {
                                    "id": 85,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "939:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 86,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "939:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "933:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MoodStates_$11",
                                  "typeString": "enum Mood.MoodStates"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 88,
                                  "name": "MoodStates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11,
                                  "src": "954:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                                    "typeString": "type(enum Mood.MoodStates)"
                                  }
                                },
                                "id": 89,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Painfully",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9,
                                "src": "954:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MoodStates_$11",
                                  "typeString": "enum Mood.MoodStates"
                                }
                              },
                              "src": "933:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 96,
                              "nodeType": "Block",
                              "src": "1033:40:0",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "4e6f4d6f6f64",
                                    "id": 94,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1054:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_86bcfc5d44771442d11341bbc2f9c13e996e488d24b10f333b3dd5d05ac29aa8",
                                      "typeString": "literal_string \"NoMood\""
                                    },
                                    "value": "NoMood"
                                  },
                                  "functionReturnParameters": 33,
                                  "id": 95,
                                  "nodeType": "Return",
                                  "src": "1047:15:0"
                                }
                              ]
                            },
                            "id": 97,
                            "nodeType": "IfStatement",
                            "src": "929:144:0",
                            "trueBody": {
                              "id": 93,
                              "nodeType": "Block",
                              "src": "976:43:0",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "5061696e66756c6c79",
                                    "id": 91,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "997:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2816e2247d04828f5eb5890356603915dbcf1fcf7c0a8f1b66f3e94517be7269",
                                      "typeString": "literal_string \"Painfully\""
                                    },
                                    "value": "Painfully"
                                  },
                                  "functionReturnParameters": 33,
                                  "id": 92,
                                  "nodeType": "Return",
                                  "src": "990:18:0"
                                }
                              ]
                            }
                          },
                          "id": 98,
                          "nodeType": "IfStatement",
                          "src": "831:242:0",
                          "trueBody": {
                            "id": 83,
                            "nodeType": "Block",
                            "src": "875:40:0",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "4c6f6e656c79",
                                  "id": 81,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "896:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f7ba701305fc30c8a39152a02e0522bf8d6b75b54f46f2ee7cae54d2bd8e39b",
                                    "typeString": "literal_string \"Lonely\""
                                  },
                                  "value": "Lonely"
                                },
                                "functionReturnParameters": 33,
                                "id": 82,
                                "nodeType": "Return",
                                "src": "889:15:0"
                              }
                            ]
                          }
                        },
                        "id": 99,
                        "nodeType": "IfStatement",
                        "src": "725:348:0",
                        "trueBody": {
                          "id": 73,
                          "nodeType": "Block",
                          "src": "773:44:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "507572706f736566756c",
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "794:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2b5912878b2fa398ebe7e0dc0750031a33d8383fdf4f69ffad4bef0350b9b321",
                                  "typeString": "literal_string \"Purposeful\""
                                },
                                "value": "Purposeful"
                              },
                              "functionReturnParameters": 33,
                              "id": 72,
                              "nodeType": "Return",
                              "src": "787:19:0"
                            }
                          ]
                        }
                      },
                      "id": 100,
                      "nodeType": "IfStatement",
                      "src": "633:440:0",
                      "trueBody": {
                        "id": 63,
                        "nodeType": "Block",
                        "src": "674:37:0",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "536164",
                              "id": 61,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "695:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a17ec0fb9ee611d156c5e025b2d40cf66fb25dd028ca76863f9f9c5cb881dcd4",
                                "typeString": "literal_string \"Sad\""
                              },
                              "value": "Sad"
                            },
                            "functionReturnParameters": 33,
                            "id": 62,
                            "nodeType": "Return",
                            "src": "688:12:0"
                          }
                        ]
                      }
                    },
                    "id": 101,
                    "nodeType": "IfStatement",
                    "src": "533:540:0",
                    "trueBody": {
                      "id": 53,
                      "nodeType": "Block",
                      "src": "578:41:0",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "416e78696f7573",
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "599:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0c75770b767569a10995b5907922cd1ab0e1f1030d6371cf61b53f91ad554eb4",
                              "typeString": "literal_string \"Anxious\""
                            },
                            "value": "Anxious"
                          },
                          "functionReturnParameters": 33,
                          "id": 52,
                          "nodeType": "Return",
                          "src": "592:16:0"
                        }
                      ]
                    }
                  },
                  "id": 102,
                  "nodeType": "IfStatement",
                  "src": "439:634:0",
                  "trueBody": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "480:39:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "4861707079",
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "501:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_45b457a9c257beb133f6f46ac26985991bbd831bf75ea15efc3bf96f333f9292",
                            "typeString": "literal_string \"Happy\""
                          },
                          "value": "Happy"
                        },
                        "functionReturnParameters": 33,
                        "id": 42,
                        "nodeType": "Return",
                        "src": "494:14:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "9d0c1397",
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMood",
            "nameLocation": "385:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "392:2:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "415:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "414:15:0"
            },
            "scope": 243,
            "src": "376:703:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "1138:93:0",
              "statements": [
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 109,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1148:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "expression": {
                          "id": 110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1154:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1154:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1148:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 113,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1168:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Happy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "1168:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1148:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$11",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1148:36:0"
                },
                {
                  "expression": {
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 117,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1194:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "expression": {
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1203:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1203:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1194:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4861707079",
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1217:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_45b457a9c257beb133f6f46ac26985991bbd831bf75ea15efc3bf96f333f9292",
                        "typeString": "literal_string \"Happy\""
                      },
                      "value": "Happy"
                    },
                    "src": "1194:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:30:0"
                }
              ]
            },
            "functionSelector": "d509e0e6",
            "id": 125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 107,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 106,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 242,
                  "src": "1124:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1124:13:0"
              }
            ],
            "name": "setHappyMood",
            "nameLocation": "1094:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1106:2:0"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1138:0:0"
            },
            "scope": 243,
            "src": "1085:146:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1292:98:0",
              "statements": [
                {
                  "expression": {
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 130,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1302:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 133,
                      "indexExpression": {
                        "expression": {
                          "id": 131,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1308:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1308:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1302:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 134,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1322:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Anxious",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "1322:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1302:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$11",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:38:0"
                },
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 138,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1350:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 141,
                      "indexExpression": {
                        "expression": {
                          "id": 139,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1359:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1359:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1350:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "416e78696f7573",
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1373:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_0c75770b767569a10995b5907922cd1ab0e1f1030d6371cf61b53f91ad554eb4",
                        "typeString": "literal_string \"Anxious\""
                      },
                      "value": "Anxious"
                    },
                    "src": "1350:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:32:0"
                }
              ]
            },
            "functionSelector": "dce5004b",
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 128,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 127,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 242,
                  "src": "1278:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1278:13:0"
              }
            ],
            "name": "setAnxiousMood",
            "nameLocation": "1246:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1260:2:0"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1292:0:0"
            },
            "scope": 243,
            "src": "1237:153:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "1447:90:0",
              "statements": [
                {
                  "expression": {
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 151,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1457:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 154,
                      "indexExpression": {
                        "expression": {
                          "id": 152,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1463:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1463:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1457:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 155,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1477:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Sad",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "1477:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1457:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$11",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:34:0"
                },
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 159,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1501:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 162,
                      "indexExpression": {
                        "expression": {
                          "id": 160,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1510:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1510:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1501:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "536164",
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1524:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a17ec0fb9ee611d156c5e025b2d40cf66fb25dd028ca76863f9f9c5cb881dcd4",
                        "typeString": "literal_string \"Sad\""
                      },
                      "value": "Sad"
                    },
                    "src": "1501:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:28:0"
                }
              ]
            },
            "functionSelector": "1da7f064",
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 149,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 148,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 242,
                  "src": "1433:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1433:13:0"
              }
            ],
            "name": "setSadMood",
            "nameLocation": "1405:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1415:2:0"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1447:0:0"
            },
            "scope": 243,
            "src": "1396:141:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "1601:104:0",
              "statements": [
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 172,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1611:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 175,
                      "indexExpression": {
                        "expression": {
                          "id": 173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1617:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1617:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1611:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 176,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1631:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Purposeful",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "1631:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1611:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$11",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:41:0"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 180,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1662:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 183,
                      "indexExpression": {
                        "expression": {
                          "id": 181,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1671:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1671:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1662:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "507572706f736566756c",
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1685:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_2b5912878b2fa398ebe7e0dc0750031a33d8383fdf4f69ffad4bef0350b9b321",
                        "typeString": "literal_string \"Purposeful\""
                      },
                      "value": "Purposeful"
                    },
                    "src": "1662:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "1662:35:0"
                }
              ]
            },
            "functionSelector": "768dd084",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 170,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 169,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 242,
                  "src": "1587:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1587:13:0"
              }
            ],
            "name": "setPurposefulMood",
            "nameLocation": "1552:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1569:2:0"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1601:0:0"
            },
            "scope": 243,
            "src": "1543:162:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "1765:99:0",
              "statements": [
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 193,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1775:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 196,
                      "indexExpression": {
                        "expression": {
                          "id": 194,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1781:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1781:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1775:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 197,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1795:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Lonely",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "1795:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1775:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$11",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "1775:37:0"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 201,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1825:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 204,
                      "indexExpression": {
                        "expression": {
                          "id": 202,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1834:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1834:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1825:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4c6f6e656c79",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1848:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6f7ba701305fc30c8a39152a02e0522bf8d6b75b54f46f2ee7cae54d2bd8e39b",
                        "typeString": "literal_string \"Lonely\""
                      },
                      "value": "Lonely"
                    },
                    "src": "1825:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:31:0"
                }
              ]
            },
            "functionSelector": "6fb815f8",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 191,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 190,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 242,
                  "src": "1751:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1751:13:0"
              }
            ],
            "name": "setLonelyMood",
            "nameLocation": "1720:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1733:2:0"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1765:0:0"
            },
            "scope": 243,
            "src": "1711:153:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "1927:102:0",
              "statements": [
                {
                  "expression": {
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 214,
                        "name": "moods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1937:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MoodStates_$11_$",
                          "typeString": "mapping(address => enum Mood.MoodStates)"
                        }
                      },
                      "id": 217,
                      "indexExpression": {
                        "expression": {
                          "id": 215,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1943:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1943:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1937:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 218,
                        "name": "MoodStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1957:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MoodStates_$11_$",
                          "typeString": "type(enum Mood.MoodStates)"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Painfully",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1957:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MoodStates_$11",
                        "typeString": "enum Mood.MoodStates"
                      }
                    },
                    "src": "1937:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MoodStates_$11",
                      "typeString": "enum Mood.MoodStates"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:40:0"
                },
                {
                  "expression": {
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 222,
                        "name": "moodsStr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1987:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 225,
                      "indexExpression": {
                        "expression": {
                          "id": 223,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1996:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1996:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1987:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "5061696e66756c6c79",
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2010:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_2816e2247d04828f5eb5890356603915dbcf1fcf7c0a8f1b66f3e94517be7269",
                        "typeString": "literal_string \"Painfully\""
                      },
                      "value": "Painfully"
                    },
                    "src": "1987:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "1987:34:0"
                }
              ]
            },
            "functionSelector": "fe5214ed",
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 212,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 211,
                  "name": "YouCantAfford",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 242,
                  "src": "1913:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1913:13:0"
              }
            ],
            "name": "setPainfullyMood",
            "nameLocation": "1879:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1895:2:0"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1927:0:0"
            },
            "scope": 243,
            "src": "1870:159:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "2058:120:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 233,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2076:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2076:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "302e3032",
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2089:10:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000000000000000_by_1",
                            "typeString": "int_const 20000000000000000"
                          },
                          "value": "0.02"
                        },
                        "src": "2076:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656e6420312065746820746f2073657420596f7572204d6f6f6420616e6420476574207375727072697365",
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2101:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22",
                          "typeString": "literal_string \"You need to send 1 eth to set Your Mood and Get surprise\""
                        },
                        "value": "You need to send 1 eth to set Your Mood and Get surprise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20f4c041889dc37fbb0994f57b53bdb6afa5515b5b04c3289793b44ffe533f22",
                          "typeString": "literal_string \"You need to send 1 eth to set Your Mood and Get surprise\""
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2068:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:92:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:92:0"
                },
                {
                  "id": 240,
                  "nodeType": "PlaceholderStatement",
                  "src": "2170:1:0"
                }
              ]
            },
            "id": 242,
            "name": "YouCantAfford",
            "nameLocation": "2044:13:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2058:0:0"
            },
            "src": "2035:143:0",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 244,
        "src": "64:2116:0",
        "usedErrors": []
      }
    ],
    "src": "39:2141:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x3a664737953A1FAbAf954ac1BEfd00bb876a167f",
      "transactionHash": "0x1d003fc2caad4dcfbbaa38ce591b747cd0f705f098bbde464a0c743350ae2844"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-22T14:34:48.404Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}